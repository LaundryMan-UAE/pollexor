//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/pollexor/src/main/java/com/squareup/pollexor/ThumborUrlBuilder.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/pollexor/ThumborUrlBuilder.h"
#include "com/squareup/pollexor/Utilities.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_PREFIX_UNSAFE(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_PREFIX_UNSAFE = @"unsafe/";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, PREFIX_UNSAFE, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_PREFIX_META(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_PREFIX_META = @"meta/";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, PREFIX_META, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_PART_SMART(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_PART_SMART = @"smart";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, PART_SMART, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_PART_TRIM(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_PART_TRIM = @"trim";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, PART_TRIM, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_PART_FIT_IN(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_PART_FIT_IN = @"fit-in";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, PART_FIT_IN, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_PART_FILTERS(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_PART_FILTERS = @"filters";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, PART_FILTERS, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_BRIGHTNESS(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_BRIGHTNESS = @"brightness";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_BRIGHTNESS, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_CONTRAST(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_CONTRAST = @"contrast";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_CONTRAST, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_NOISE(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_NOISE = @"noise";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_NOISE, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_QUALITY(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_QUALITY = @"quality";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_QUALITY, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_RGB(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_RGB = @"rgb";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_RGB, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_ROUND_CORNER(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_ROUND_CORNER = @"round_corner";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_ROUND_CORNER, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_WATERMARK(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_WATERMARK = @"watermark";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_WATERMARK, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_SHARPEN(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_SHARPEN = @"sharpen";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_SHARPEN, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_FILL(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_FILL = @"fill";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_FILL, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_FORMAT(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_FORMAT = @"format";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_FORMAT, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_FRAME(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_FRAME = @"frame";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_FRAME, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_STRIP_ICC(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_STRIP_ICC = @"strip_icc";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_STRIP_ICC, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_GRAYSCALE(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_GRAYSCALE = @"grayscale";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_GRAYSCALE, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_EQUALIZE(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_EQUALIZE = @"equalize";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_EQUALIZE, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_BLUR(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_BLUR = @"blur";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_BLUR, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_NO_UPSCALE(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_NO_UPSCALE = @"no_upscale";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_NO_UPSCALE, NSString *)

inline NSString *ComSquareupPollexorThumborUrlBuilder_get_FILTER_ROTATE(void);
static NSString *ComSquareupPollexorThumborUrlBuilder_FILTER_ROTATE = @"rotate";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupPollexorThumborUrlBuilder, FILTER_ROTATE, NSString *)

__attribute__((unused)) static void ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_initWithNSString_withNSString_withInt_(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *self, NSString *value, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ComSquareupPollexorThumborUrlBuilder_VerticalAlign_initWithNSString_withNSString_withInt_(ComSquareupPollexorThumborUrlBuilder_VerticalAlign *self, NSString *value, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_initWithNSString_withNSString_withInt_(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *self, NSString *value, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ComSquareupPollexorThumborUrlBuilder_ImageFormat_initWithNSString_withNSString_withInt_(ComSquareupPollexorThumborUrlBuilder_ImageFormat *self, NSString *value, NSString *__name, jint __ordinal);

@implementation ComSquareupPollexorThumborUrlBuilder

- (instancetype)initWithNSString:(NSString *)host
                    withNSString:(NSString *)key
                    withNSString:(NSString *)image {
  ComSquareupPollexorThumborUrlBuilder_initWithNSString_withNSString_withNSString_(self, host, key, image);
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)resizeWithInt:(jint)width
                                                withInt:(jint)height {
  if (width < 0 && width != ComSquareupPollexorThumborUrlBuilder_ORIGINAL_SIZE) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Width must be a positive number.");
  }
  if (height < 0 && height != ComSquareupPollexorThumborUrlBuilder_ORIGINAL_SIZE) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Height must be a positive number.");
  }
  if (width == 0 && height == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Both width and height must not be zero.");
  }
  hasResize_ = true;
  resizeWidth_ = width;
  resizeHeight_ = height;
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)flipHorizontally {
  if (!hasResize_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Image must be resized first in order to flip.");
  }
  flipHorizontally_ = true;
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)flipVertically {
  if (!hasResize_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Image must be resized first in order to flip.");
  }
  flipVertically_ = true;
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)fitIn {
  if (!hasResize_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Image must be resized first in order to apply 'fit-in'.");
  }
  fitIn_ = true;
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)cropWithInt:(jint)top
                                              withInt:(jint)left
                                              withInt:(jint)bottom
                                              withInt:(jint)right {
  if (top < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Top must be greater or equal to zero.");
  }
  if (left < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Left must be greater or equal to zero.");
  }
  if (bottom < 1 || bottom <= top) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Bottom must be greater than zero and top.");
  }
  if (right < 1 || right <= left) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Right must be greater than zero and left.");
  }
  hasCrop_ = true;
  cropTop_ = top;
  cropLeft_ = left;
  cropBottom_ = bottom;
  cropRight_ = right;
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)alignWithComSquareupPollexorThumborUrlBuilder_HorizontalAlign:(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *)align {
  if (!hasResize_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Image must be resized first in order to align.");
  }
  JreStrongAssign(&cropHorizontalAlign_, align);
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)alignWithComSquareupPollexorThumborUrlBuilder_VerticalAlign:(ComSquareupPollexorThumborUrlBuilder_VerticalAlign *)align {
  if (!hasResize_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Image must be resized first in order to align.");
  }
  JreStrongAssign(&cropVerticalAlign_, align);
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)alignWithComSquareupPollexorThumborUrlBuilder_VerticalAlign:(ComSquareupPollexorThumborUrlBuilder_VerticalAlign *)valign
                                             withComSquareupPollexorThumborUrlBuilder_HorizontalAlign:(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *)halign {
  return [((ComSquareupPollexorThumborUrlBuilder *) nil_chk([self alignWithComSquareupPollexorThumborUrlBuilder_VerticalAlign:valign])) alignWithComSquareupPollexorThumborUrlBuilder_HorizontalAlign:halign];
}

- (ComSquareupPollexorThumborUrlBuilder *)smart {
  if (!hasResize_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Image must be resized first in order to smart align.");
  }
  isSmart_ = true;
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)trim {
  return [self trimWithComSquareupPollexorThumborUrlBuilder_TrimPixelColor:nil];
}

- (ComSquareupPollexorThumborUrlBuilder *)trimWithComSquareupPollexorThumborUrlBuilder_TrimPixelColor:(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *)value {
  return [self trimWithComSquareupPollexorThumborUrlBuilder_TrimPixelColor:value withInt:0];
}

- (ComSquareupPollexorThumborUrlBuilder *)trimWithComSquareupPollexorThumborUrlBuilder_TrimPixelColor:(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *)value
                                                                                              withInt:(jint)colorTolerance {
  if (colorTolerance < 0 || colorTolerance > 442) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Color tolerance must be between 0 and 442.");
  }
  if (colorTolerance > 0 && value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Trim pixel color value must not be null.");
  }
  isTrim_ = true;
  JreStrongAssign(&trimPixelColor_, value);
  trimColorTolerance_ = colorTolerance;
  return self;
}

- (ComSquareupPollexorThumborUrlBuilder *)filterWithNSStringArray:(IOSObjectArray *)filters {
  if (((IOSObjectArray *) nil_chk(filters))->size_ == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"You must provide at least one filter.");
  }
  if (self->filters_ == nil) {
    JreStrongAssignAndConsume(&self->filters_, new_JavaUtilArrayList_initWithInt_(filters->size_));
  }
  {
    IOSObjectArray *a__ = filters;
    NSString * const *b__ = a__->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *filter = *b__++;
      if (filter == nil || [filter java_length] == 0) {
        @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Filter must not be blank.");
      }
      [((id<JavaUtilList>) nil_chk(self->filters_)) addWithId:filter];
    }
  }
  return self;
}

- (NSString *)toUrl {
  return (key_ == nil) ? [self toUrlUnsafe] : [self toUrlSafe];
}

- (NSString *)toUrlUnsafe {
  return JreStrcat("$$@", host_, ComSquareupPollexorThumborUrlBuilder_PREFIX_UNSAFE, [self assembleConfigWithBoolean:false]);
}

- (NSString *)toUrlSafe {
  if (key_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot build safe URL without a key.");
  }
  JavaLangStringBuilder *config = [self assembleConfigWithBoolean:false];
  IOSByteArray *encrypted = ComSquareupPollexorUtilities_hmacSha1WithJavaLangStringBuilder_withNSString_(config, key_);
  NSString *encoded = ComSquareupPollexorUtilities_base64EncodeWithByteArray_(encrypted);
  id<JavaLangCharSequence> suffix = config;
  return JreStrcat("$$C@", host_, encoded, '/', suffix);
}

- (NSString *)toMeta {
  return (key_ == nil) ? [self toMetaUnsafe] : [self toMetaSafe];
}

- (NSString *)toMetaUnsafe {
  return JreStrcat("$@", host_, [self assembleConfigWithBoolean:true]);
}

- (NSString *)toMetaSafe {
  JavaLangStringBuilder *config = [self assembleConfigWithBoolean:true];
  IOSByteArray *encrypted = ComSquareupPollexorUtilities_hmacSha1WithJavaLangStringBuilder_withNSString_(config, key_);
  NSString *encoded = ComSquareupPollexorUtilities_base64EncodeWithByteArray_(encrypted);
  return JreStrcat("$$C@", host_, encoded, '/', config);
}

- (NSString *)description {
  return [self toUrl];
}

- (JavaLangStringBuilder *)assembleConfigWithBoolean:(jboolean)meta {
  JavaLangStringBuilder *builder = create_JavaLangStringBuilder_init();
  if (meta) {
    [builder appendWithNSString:ComSquareupPollexorThumborUrlBuilder_PREFIX_META];
  }
  if (isTrim_) {
    [builder appendWithNSString:ComSquareupPollexorThumborUrlBuilder_PART_TRIM];
    if (trimPixelColor_ != nil) {
      [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@":"])) appendWithNSString:((ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *) nil_chk(trimPixelColor_))->value_];
      if (trimColorTolerance_ > 0) {
        [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@":"])) appendWithInt:trimColorTolerance_];
      }
    }
    [builder appendWithNSString:@"/"];
  }
  if (hasCrop_) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([builder appendWithInt:cropLeft_])) appendWithNSString:@"x"])) appendWithInt:cropTop_])) appendWithNSString:@":"])) appendWithInt:cropRight_])) appendWithNSString:@"x"])) appendWithInt:cropBottom_];
    [builder appendWithNSString:@"/"];
  }
  if (hasResize_) {
    if (fitIn_) {
      [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:ComSquareupPollexorThumborUrlBuilder_PART_FIT_IN])) appendWithNSString:@"/"];
    }
    if (flipHorizontally_) {
      [builder appendWithNSString:@"-"];
    }
    if (resizeWidth_ == ComSquareupPollexorThumborUrlBuilder_ORIGINAL_SIZE) {
      [builder appendWithNSString:@"orig"];
    }
    else {
      [builder appendWithInt:resizeWidth_];
    }
    [builder appendWithNSString:@"x"];
    if (flipVertically_) {
      [builder appendWithNSString:@"-"];
    }
    if (resizeHeight_ == ComSquareupPollexorThumborUrlBuilder_ORIGINAL_SIZE) {
      [builder appendWithNSString:@"orig"];
    }
    else {
      [builder appendWithInt:resizeHeight_];
    }
    if (isSmart_) {
      [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@"/"])) appendWithNSString:ComSquareupPollexorThumborUrlBuilder_PART_SMART];
    }
    else {
      if (cropHorizontalAlign_ != nil) {
        [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@"/"])) appendWithNSString:((ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *) nil_chk(cropHorizontalAlign_))->value_];
      }
      if (cropVerticalAlign_ != nil) {
        [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@"/"])) appendWithNSString:((ComSquareupPollexorThumborUrlBuilder_VerticalAlign *) nil_chk(cropVerticalAlign_))->value_];
      }
    }
    [builder appendWithNSString:@"/"];
  }
  if (filters_ != nil) {
    [builder appendWithNSString:ComSquareupPollexorThumborUrlBuilder_PART_FILTERS];
    for (NSString * __strong filter in nil_chk(filters_)) {
      [((JavaLangStringBuilder *) nil_chk([builder appendWithNSString:@":"])) appendWithNSString:filter];
    }
    [builder appendWithNSString:@"/"];
  }
  [builder appendWithNSString:image_];
  return builder;
}

+ (NSString *)brightnessWithInt:(jint)amount {
  return ComSquareupPollexorThumborUrlBuilder_brightnessWithInt_(amount);
}

+ (NSString *)contrastWithInt:(jint)amount {
  return ComSquareupPollexorThumborUrlBuilder_contrastWithInt_(amount);
}

+ (NSString *)noiseWithInt:(jint)amount {
  return ComSquareupPollexorThumborUrlBuilder_noiseWithInt_(amount);
}

+ (NSString *)qualityWithInt:(jint)amount {
  return ComSquareupPollexorThumborUrlBuilder_qualityWithInt_(amount);
}

+ (NSString *)rgbWithInt:(jint)r
                 withInt:(jint)g
                 withInt:(jint)b {
  return ComSquareupPollexorThumborUrlBuilder_rgbWithInt_withInt_withInt_(r, g, b);
}

+ (NSString *)roundCornerWithInt:(jint)radius {
  return ComSquareupPollexorThumborUrlBuilder_roundCornerWithInt_(radius);
}

+ (NSString *)roundCornerWithInt:(jint)radius
                         withInt:(jint)color {
  return ComSquareupPollexorThumborUrlBuilder_roundCornerWithInt_withInt_(radius, color);
}

+ (NSString *)roundCornerWithInt:(jint)radiusInner
                         withInt:(jint)radiusOuter
                         withInt:(jint)color {
  return ComSquareupPollexorThumborUrlBuilder_roundCornerWithInt_withInt_withInt_(radiusInner, radiusOuter, color);
}

+ (NSString *)watermarkWithNSString:(NSString *)imageUrl {
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_(imageUrl);
}

+ (NSString *)watermarkWithComSquareupPollexorThumborUrlBuilder:(ComSquareupPollexorThumborUrlBuilder *)image {
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithComSquareupPollexorThumborUrlBuilder_(image);
}

+ (NSString *)watermarkWithNSString:(NSString *)imageUrl
                            withInt:(jint)x
                            withInt:(jint)y {
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_withInt_withInt_(imageUrl, x, y);
}

+ (NSString *)watermarkWithComSquareupPollexorThumborUrlBuilder:(ComSquareupPollexorThumborUrlBuilder *)image
                                                        withInt:(jint)x
                                                        withInt:(jint)y {
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithComSquareupPollexorThumborUrlBuilder_withInt_withInt_(image, x, y);
}

+ (NSString *)watermarkWithNSString:(NSString *)imageUrl
                            withInt:(jint)x
                            withInt:(jint)y
                            withInt:(jint)transparency {
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_withInt_withInt_withInt_(imageUrl, x, y, transparency);
}

+ (NSString *)watermarkWithComSquareupPollexorThumborUrlBuilder:(ComSquareupPollexorThumborUrlBuilder *)image
                                                        withInt:(jint)x
                                                        withInt:(jint)y
                                                        withInt:(jint)transparency {
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithComSquareupPollexorThumborUrlBuilder_withInt_withInt_withInt_(image, x, y, transparency);
}

+ (NSString *)sharpenWithFloat:(jfloat)amount
                     withFloat:(jfloat)radius
                   withBoolean:(jboolean)luminanceOnly {
  return ComSquareupPollexorThumborUrlBuilder_sharpenWithFloat_withFloat_withBoolean_(amount, radius, luminanceOnly);
}

+ (NSString *)fillWithInt:(jint)color {
  return ComSquareupPollexorThumborUrlBuilder_fillWithInt_(color);
}

+ (NSString *)formatWithComSquareupPollexorThumborUrlBuilder_ImageFormat:(ComSquareupPollexorThumborUrlBuilder_ImageFormat *)format {
  return ComSquareupPollexorThumborUrlBuilder_formatWithComSquareupPollexorThumborUrlBuilder_ImageFormat_(format);
}

+ (NSString *)frameWithNSString:(NSString *)imageUrl {
  return ComSquareupPollexorThumborUrlBuilder_frameWithNSString_(imageUrl);
}

+ (NSString *)stripicc {
  return ComSquareupPollexorThumborUrlBuilder_stripicc();
}

+ (NSString *)grayscale {
  return ComSquareupPollexorThumborUrlBuilder_grayscale();
}

+ (NSString *)equalize {
  return ComSquareupPollexorThumborUrlBuilder_equalize();
}

+ (NSString *)blurWithInt:(jint)radius {
  return ComSquareupPollexorThumborUrlBuilder_blurWithInt_(radius);
}

+ (NSString *)blurWithInt:(jint)radius
                  withInt:(jint)sigma {
  return ComSquareupPollexorThumborUrlBuilder_blurWithInt_withInt_(radius, sigma);
}

+ (NSString *)noUpscale {
  return ComSquareupPollexorThumborUrlBuilder_noUpscale();
}

+ (NSString *)rotateWithInt:(jint)angle {
  return ComSquareupPollexorThumborUrlBuilder_rotateWithInt_(angle);
}

- (void)dealloc {
  RELEASE_(image_);
  RELEASE_(host_);
  RELEASE_(key_);
  RELEASE_(cropHorizontalAlign_);
  RELEASE_(cropVerticalAlign_);
  RELEASE_(trimPixelColor_);
  RELEASE_(filters_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, 5, 7, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, 5, 8, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x1, 9, 11, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder;", 0x81, 12, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x0, 15, 16, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 17, 18, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 19, 18, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 20, 18, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 21, 18, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 22, 23, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 24, 18, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 24, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 24, 23, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 25, 26, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 25, 27, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 25, 28, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 25, 29, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 25, 30, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 25, 31, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 32, 33, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 34, 18, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 35, 36, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 37, 26, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 38, 18, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 38, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 39, 18, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[1].selector = @selector(resizeWithInt:withInt:);
  methods[2].selector = @selector(flipHorizontally);
  methods[3].selector = @selector(flipVertically);
  methods[4].selector = @selector(fitIn);
  methods[5].selector = @selector(cropWithInt:withInt:withInt:withInt:);
  methods[6].selector = @selector(alignWithComSquareupPollexorThumborUrlBuilder_HorizontalAlign:);
  methods[7].selector = @selector(alignWithComSquareupPollexorThumborUrlBuilder_VerticalAlign:);
  methods[8].selector = @selector(alignWithComSquareupPollexorThumborUrlBuilder_VerticalAlign:withComSquareupPollexorThumborUrlBuilder_HorizontalAlign:);
  methods[9].selector = @selector(smart);
  methods[10].selector = @selector(trim);
  methods[11].selector = @selector(trimWithComSquareupPollexorThumborUrlBuilder_TrimPixelColor:);
  methods[12].selector = @selector(trimWithComSquareupPollexorThumborUrlBuilder_TrimPixelColor:withInt:);
  methods[13].selector = @selector(filterWithNSStringArray:);
  methods[14].selector = @selector(toUrl);
  methods[15].selector = @selector(toUrlUnsafe);
  methods[16].selector = @selector(toUrlSafe);
  methods[17].selector = @selector(toMeta);
  methods[18].selector = @selector(toMetaUnsafe);
  methods[19].selector = @selector(toMetaSafe);
  methods[20].selector = @selector(description);
  methods[21].selector = @selector(assembleConfigWithBoolean:);
  methods[22].selector = @selector(brightnessWithInt:);
  methods[23].selector = @selector(contrastWithInt:);
  methods[24].selector = @selector(noiseWithInt:);
  methods[25].selector = @selector(qualityWithInt:);
  methods[26].selector = @selector(rgbWithInt:withInt:withInt:);
  methods[27].selector = @selector(roundCornerWithInt:);
  methods[28].selector = @selector(roundCornerWithInt:withInt:);
  methods[29].selector = @selector(roundCornerWithInt:withInt:withInt:);
  methods[30].selector = @selector(watermarkWithNSString:);
  methods[31].selector = @selector(watermarkWithComSquareupPollexorThumborUrlBuilder:);
  methods[32].selector = @selector(watermarkWithNSString:withInt:withInt:);
  methods[33].selector = @selector(watermarkWithComSquareupPollexorThumborUrlBuilder:withInt:withInt:);
  methods[34].selector = @selector(watermarkWithNSString:withInt:withInt:withInt:);
  methods[35].selector = @selector(watermarkWithComSquareupPollexorThumborUrlBuilder:withInt:withInt:withInt:);
  methods[36].selector = @selector(sharpenWithFloat:withFloat:withBoolean:);
  methods[37].selector = @selector(fillWithInt:);
  methods[38].selector = @selector(formatWithComSquareupPollexorThumborUrlBuilder_ImageFormat:);
  methods[39].selector = @selector(frameWithNSString:);
  methods[40].selector = @selector(stripicc);
  methods[41].selector = @selector(grayscale);
  methods[42].selector = @selector(equalize);
  methods[43].selector = @selector(blurWithInt:);
  methods[44].selector = @selector(blurWithInt:withInt:);
  methods[45].selector = @selector(noUpscale);
  methods[46].selector = @selector(rotateWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX_UNSAFE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 40, -1, -1 },
    { "PREFIX_META", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 41, -1, -1 },
    { "PART_SMART", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 42, -1, -1 },
    { "PART_TRIM", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 43, -1, -1 },
    { "PART_FIT_IN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 44, -1, -1 },
    { "PART_FILTERS", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 45, -1, -1 },
    { "FILTER_BRIGHTNESS", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 46, -1, -1 },
    { "FILTER_CONTRAST", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 47, -1, -1 },
    { "FILTER_NOISE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 48, -1, -1 },
    { "FILTER_QUALITY", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 49, -1, -1 },
    { "FILTER_RGB", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 50, -1, -1 },
    { "FILTER_ROUND_CORNER", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 51, -1, -1 },
    { "FILTER_WATERMARK", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 52, -1, -1 },
    { "FILTER_SHARPEN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 53, -1, -1 },
    { "FILTER_FILL", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 54, -1, -1 },
    { "FILTER_FORMAT", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 55, -1, -1 },
    { "FILTER_FRAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 56, -1, -1 },
    { "FILTER_STRIP_ICC", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 57, -1, -1 },
    { "FILTER_GRAYSCALE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 58, -1, -1 },
    { "FILTER_EQUALIZE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 59, -1, -1 },
    { "FILTER_BLUR", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 60, -1, -1 },
    { "FILTER_NO_UPSCALE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 61, -1, -1 },
    { "FILTER_ROTATE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 62, -1, -1 },
    { "ORIGINAL_SIZE", "I", .constantValue.asInt = ComSquareupPollexorThumborUrlBuilder_ORIGINAL_SIZE, 0x19, -1, -1, -1, -1 },
    { "image_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "host_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "hasCrop_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "hasResize_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "isSmart_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "isTrim_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "flipHorizontally_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "flipVertically_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fitIn_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "resizeWidth_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "resizeHeight_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "cropTop_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "cropLeft_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "cropBottom_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "cropRight_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "trimColorTolerance_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "cropHorizontalAlign_", "LComSquareupPollexorThumborUrlBuilder_HorizontalAlign;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "cropVerticalAlign_", "LComSquareupPollexorThumborUrlBuilder_VerticalAlign;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "trimPixelColor_", "LComSquareupPollexorThumborUrlBuilder_TrimPixelColor;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "filters_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 63, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;", "resize", "II", "crop", "IIII", "align", "LComSquareupPollexorThumborUrlBuilder_HorizontalAlign;", "LComSquareupPollexorThumborUrlBuilder_VerticalAlign;", "LComSquareupPollexorThumborUrlBuilder_VerticalAlign;LComSquareupPollexorThumborUrlBuilder_HorizontalAlign;", "trim", "LComSquareupPollexorThumborUrlBuilder_TrimPixelColor;", "LComSquareupPollexorThumborUrlBuilder_TrimPixelColor;I", "filter", "[LNSString;", "toString", "assembleConfig", "Z", "brightness", "I", "contrast", "noise", "quality", "rgb", "III", "roundCorner", "watermark", "LNSString;", "LComSquareupPollexorThumborUrlBuilder;", "LNSString;II", "LComSquareupPollexorThumborUrlBuilder;II", "LNSString;III", "LComSquareupPollexorThumborUrlBuilder;III", "sharpen", "FFZ", "fill", "format", "LComSquareupPollexorThumborUrlBuilder_ImageFormat;", "frame", "blur", "rotate", &ComSquareupPollexorThumborUrlBuilder_PREFIX_UNSAFE, &ComSquareupPollexorThumborUrlBuilder_PREFIX_META, &ComSquareupPollexorThumborUrlBuilder_PART_SMART, &ComSquareupPollexorThumborUrlBuilder_PART_TRIM, &ComSquareupPollexorThumborUrlBuilder_PART_FIT_IN, &ComSquareupPollexorThumborUrlBuilder_PART_FILTERS, &ComSquareupPollexorThumborUrlBuilder_FILTER_BRIGHTNESS, &ComSquareupPollexorThumborUrlBuilder_FILTER_CONTRAST, &ComSquareupPollexorThumborUrlBuilder_FILTER_NOISE, &ComSquareupPollexorThumborUrlBuilder_FILTER_QUALITY, &ComSquareupPollexorThumborUrlBuilder_FILTER_RGB, &ComSquareupPollexorThumborUrlBuilder_FILTER_ROUND_CORNER, &ComSquareupPollexorThumborUrlBuilder_FILTER_WATERMARK, &ComSquareupPollexorThumborUrlBuilder_FILTER_SHARPEN, &ComSquareupPollexorThumborUrlBuilder_FILTER_FILL, &ComSquareupPollexorThumborUrlBuilder_FILTER_FORMAT, &ComSquareupPollexorThumborUrlBuilder_FILTER_FRAME, &ComSquareupPollexorThumborUrlBuilder_FILTER_STRIP_ICC, &ComSquareupPollexorThumborUrlBuilder_FILTER_GRAYSCALE, &ComSquareupPollexorThumborUrlBuilder_FILTER_EQUALIZE, &ComSquareupPollexorThumborUrlBuilder_FILTER_BLUR, &ComSquareupPollexorThumborUrlBuilder_FILTER_NO_UPSCALE, &ComSquareupPollexorThumborUrlBuilder_FILTER_ROTATE, "Ljava/util/List<Ljava/lang/String;>;", "LComSquareupPollexorThumborUrlBuilder_HorizontalAlign;LComSquareupPollexorThumborUrlBuilder_VerticalAlign;LComSquareupPollexorThumborUrlBuilder_TrimPixelColor;LComSquareupPollexorThumborUrlBuilder_ImageFormat;" };
  static const J2ObjcClassInfo _ComSquareupPollexorThumborUrlBuilder = { "ThumborUrlBuilder", "com.squareup.pollexor", ptrTable, methods, fields, 7, 0x11, 47, 45, -1, 64, -1, -1, -1 };
  return &_ComSquareupPollexorThumborUrlBuilder;
}

@end

void ComSquareupPollexorThumborUrlBuilder_initWithNSString_withNSString_withNSString_(ComSquareupPollexorThumborUrlBuilder *self, NSString *host, NSString *key, NSString *image) {
  NSObject_init(self);
  JreStrongAssign(&self->host_, host);
  JreStrongAssign(&self->key_, key);
  JreStrongAssign(&self->image_, image);
}

ComSquareupPollexorThumborUrlBuilder *new_ComSquareupPollexorThumborUrlBuilder_initWithNSString_withNSString_withNSString_(NSString *host, NSString *key, NSString *image) {
  J2OBJC_NEW_IMPL(ComSquareupPollexorThumborUrlBuilder, initWithNSString_withNSString_withNSString_, host, key, image)
}

ComSquareupPollexorThumborUrlBuilder *create_ComSquareupPollexorThumborUrlBuilder_initWithNSString_withNSString_withNSString_(NSString *host, NSString *key, NSString *image) {
  J2OBJC_CREATE_IMPL(ComSquareupPollexorThumborUrlBuilder, initWithNSString_withNSString_withNSString_, host, key, image)
}

NSString *ComSquareupPollexorThumborUrlBuilder_brightnessWithInt_(jint amount) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (amount < -100 || amount > 100) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Amount must be between -100 and 100, inclusive.");
  }
  return JreStrcat("$CIC", ComSquareupPollexorThumborUrlBuilder_FILTER_BRIGHTNESS, '(', amount, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_contrastWithInt_(jint amount) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (amount < -100 || amount > 100) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Amount must be between -100 and 100, inclusive.");
  }
  return JreStrcat("$CIC", ComSquareupPollexorThumborUrlBuilder_FILTER_CONTRAST, '(', amount, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_noiseWithInt_(jint amount) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (amount < 0 || amount > 100) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Amount must be between 0 and 100, inclusive");
  }
  return JreStrcat("$CIC", ComSquareupPollexorThumborUrlBuilder_FILTER_NOISE, '(', amount, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_qualityWithInt_(jint amount) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (amount < 0 || amount > 100) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Amount must be between 0 and 100, inclusive.");
  }
  return JreStrcat("$CIC", ComSquareupPollexorThumborUrlBuilder_FILTER_QUALITY, '(', amount, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_rgbWithInt_withInt_withInt_(jint r, jint g, jint b) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (r < -100 || r > 100) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Red value must be between -100 and 100, inclusive.");
  }
  if (g < -100 || g > 100) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Green value must be between -100 and 100, inclusive.");
  }
  if (b < -100 || b > 100) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Blue value must be between -100 and 100, inclusive.");
  }
  return JreStrcat("$CICICIC", ComSquareupPollexorThumborUrlBuilder_FILTER_RGB, '(', r, ',', g, ',', b, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_roundCornerWithInt_(jint radius) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return ComSquareupPollexorThumborUrlBuilder_roundCornerWithInt_withInt_(radius, (jint) 0xFFFFFF);
}

NSString *ComSquareupPollexorThumborUrlBuilder_roundCornerWithInt_withInt_(jint radius, jint color) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return ComSquareupPollexorThumborUrlBuilder_roundCornerWithInt_withInt_withInt_(radius, 0, color);
}

NSString *ComSquareupPollexorThumborUrlBuilder_roundCornerWithInt_withInt_withInt_(jint radiusInner, jint radiusOuter, jint color) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (radiusInner < 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Radius must be greater than zero.");
  }
  if (radiusOuter < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Outer radius must be greater than or equal to zero.");
  }
  JavaLangStringBuilder *builder = [((JavaLangStringBuilder *) nil_chk([create_JavaLangStringBuilder_initWithNSString_(ComSquareupPollexorThumborUrlBuilder_FILTER_ROUND_CORNER) appendWithNSString:@"("])) appendWithInt:radiusInner];
  if (radiusOuter > 0) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@"|"])) appendWithInt:radiusOuter];
  }
  jint r = JreURShift32((color & (jint) 0xFF0000), 16);
  jint g = JreURShift32((color & (jint) 0xFF00), 8);
  jint b = color & (jint) 0xFF;
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@","])) appendWithInt:r])) appendWithNSString:@","])) appendWithInt:g])) appendWithNSString:@","])) appendWithInt:b])) appendWithNSString:@")"])) description];
}

NSString *ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_(NSString *imageUrl) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_withInt_withInt_(imageUrl, 0, 0);
}

NSString *ComSquareupPollexorThumborUrlBuilder_watermarkWithComSquareupPollexorThumborUrlBuilder_(ComSquareupPollexorThumborUrlBuilder *image) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithComSquareupPollexorThumborUrlBuilder_withInt_withInt_(image, 0, 0);
}

NSString *ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_withInt_withInt_(NSString *imageUrl, jint x, jint y) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_withInt_withInt_withInt_(imageUrl, x, y, 0);
}

NSString *ComSquareupPollexorThumborUrlBuilder_watermarkWithComSquareupPollexorThumborUrlBuilder_withInt_withInt_(ComSquareupPollexorThumborUrlBuilder *image, jint x, jint y) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (image == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Image must not be null.");
  }
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_withInt_withInt_withInt_([image description], x, y, 0);
}

NSString *ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_withInt_withInt_withInt_(NSString *imageUrl, jint x, jint y, jint transparency) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (imageUrl == nil || [imageUrl java_length] == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Image URL must not be blank.");
  }
  if (transparency < 0 || transparency > 100) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Transparency must be between 0 and 100, inclusive.");
  }
  return JreStrcat("$C$CICICIC", ComSquareupPollexorThumborUrlBuilder_FILTER_WATERMARK, '(', imageUrl, ',', x, ',', y, ',', transparency, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_watermarkWithComSquareupPollexorThumborUrlBuilder_withInt_withInt_withInt_(ComSquareupPollexorThumborUrlBuilder *image, jint x, jint y, jint transparency) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (image == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Image must not be null.");
  }
  return ComSquareupPollexorThumborUrlBuilder_watermarkWithNSString_withInt_withInt_withInt_([image description], x, y, transparency);
}

NSString *ComSquareupPollexorThumborUrlBuilder_sharpenWithFloat_withFloat_withBoolean_(jfloat amount, jfloat radius, jboolean luminanceOnly) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return JreStrcat("$CFCFCZC", ComSquareupPollexorThumborUrlBuilder_FILTER_SHARPEN, '(', amount, ',', radius, ',', luminanceOnly, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_fillWithInt_(jint color) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  NSString *colorCode = JavaLangInteger_toHexStringWithInt_(color & (jint) 0xFFFFFF);
  return JreStrcat("$C$C", ComSquareupPollexorThumborUrlBuilder_FILTER_FILL, '(', colorCode, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_formatWithComSquareupPollexorThumborUrlBuilder_ImageFormat_(ComSquareupPollexorThumborUrlBuilder_ImageFormat *format) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (format == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"You must specify an image format.");
  }
  return JreStrcat("$C$C", ComSquareupPollexorThumborUrlBuilder_FILTER_FORMAT, '(', format->value_, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_frameWithNSString_(NSString *imageUrl) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (imageUrl == nil || [imageUrl java_length] == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Image URL must not be blank.");
  }
  return JreStrcat("$C$C", ComSquareupPollexorThumborUrlBuilder_FILTER_FRAME, '(', imageUrl, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_stripicc() {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return JreStrcat("$$", ComSquareupPollexorThumborUrlBuilder_FILTER_STRIP_ICC, @"()");
}

NSString *ComSquareupPollexorThumborUrlBuilder_grayscale() {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return JreStrcat("$$", ComSquareupPollexorThumborUrlBuilder_FILTER_GRAYSCALE, @"()");
}

NSString *ComSquareupPollexorThumborUrlBuilder_equalize() {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return JreStrcat("$$", ComSquareupPollexorThumborUrlBuilder_FILTER_EQUALIZE, @"()");
}

NSString *ComSquareupPollexorThumborUrlBuilder_blurWithInt_(jint radius) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return ComSquareupPollexorThumborUrlBuilder_blurWithInt_withInt_(radius, 0);
}

NSString *ComSquareupPollexorThumborUrlBuilder_blurWithInt_withInt_(jint radius, jint sigma) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (radius < 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Radius must be greater than zero.");
  }
  if (radius > 150) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Radius must be lower or equal than 150.");
  }
  if (sigma < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Sigma must be greater than zero.");
  }
  return JreStrcat("$CICIC", ComSquareupPollexorThumborUrlBuilder_FILTER_BLUR, '(', radius, ',', sigma, ')');
}

NSString *ComSquareupPollexorThumborUrlBuilder_noUpscale() {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  return JreStrcat("$$", ComSquareupPollexorThumborUrlBuilder_FILTER_NO_UPSCALE, @"()");
}

NSString *ComSquareupPollexorThumborUrlBuilder_rotateWithInt_(jint angle) {
  ComSquareupPollexorThumborUrlBuilder_initialize();
  if (JreIntMod(angle, 90) != 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Angle must be multiple of 90\u00b0");
  }
  return JreStrcat("$CIC", ComSquareupPollexorThumborUrlBuilder_FILTER_ROTATE, '(', angle, ')');
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupPollexorThumborUrlBuilder)

J2OBJC_INITIALIZED_DEFN(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign)

ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_values_[3];

@implementation ComSquareupPollexorThumborUrlBuilder_HorizontalAlign

+ (IOSObjectArray *)values {
  return ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_values();
}

+ (ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *)valueOfWithNSString:(NSString *)name {
  return ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_valueOfWithNSString_(name);
}

- (ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_Enum)toNSEnum {
  return (ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComSquareupPollexorThumborUrlBuilder_HorizontalAlign;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder_HorizontalAlign;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LEFT", "LComSquareupPollexorThumborUrlBuilder_HorizontalAlign;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "CENTER", "LComSquareupPollexorThumborUrlBuilder_HorizontalAlign;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "RIGHT", "LComSquareupPollexorThumborUrlBuilder_HorizontalAlign;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign, LEFT), &JreEnum(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign, CENTER), &JreEnum(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign, RIGHT), "LComSquareupPollexorThumborUrlBuilder;", "Ljava/lang/Enum<Lcom/squareup/pollexor/ThumborUrlBuilder$HorizontalAlign;>;" };
  static const J2ObjcClassInfo _ComSquareupPollexorThumborUrlBuilder_HorizontalAlign = { "HorizontalAlign", "com.squareup.pollexor", ptrTable, methods, fields, 7, 0x4019, 2, 4, 5, -1, -1, 6, -1 };
  return &_ComSquareupPollexorThumborUrlBuilder_HorizontalAlign;
}

+ (void)initialize {
  if (self == [ComSquareupPollexorThumborUrlBuilder_HorizontalAlign class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign, LEFT) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_initWithNSString_withNSString_withInt_(e, @"left", @"LEFT", 0);
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign, CENTER) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_initWithNSString_withNSString_withInt_(e, @"center", @"CENTER", 1);
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign, RIGHT) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_initWithNSString_withNSString_withInt_(e, @"right", @"RIGHT", 2);
    J2OBJC_SET_INITIALIZED(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign)
  }
}

@end

void ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_initWithNSString_withNSString_withInt_(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *self, NSString *value, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->value_, value);
}

IOSObjectArray *ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_values() {
  ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_initialize();
  return [IOSObjectArray arrayWithObjects:ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_values_ count:3 type:ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_class_()];
}

ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_valueOfWithNSString_(NSString *name) {
  ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_initialize();
  for (int i = 0; i < 3; i++) {
    ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *e = ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComSquareupPollexorThumborUrlBuilder_HorizontalAlign *ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_fromOrdinal(NSUInteger ordinal) {
  ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return ComSquareupPollexorThumborUrlBuilder_HorizontalAlign_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupPollexorThumborUrlBuilder_HorizontalAlign)

J2OBJC_INITIALIZED_DEFN(ComSquareupPollexorThumborUrlBuilder_VerticalAlign)

ComSquareupPollexorThumborUrlBuilder_VerticalAlign *ComSquareupPollexorThumborUrlBuilder_VerticalAlign_values_[3];

@implementation ComSquareupPollexorThumborUrlBuilder_VerticalAlign

+ (IOSObjectArray *)values {
  return ComSquareupPollexorThumborUrlBuilder_VerticalAlign_values();
}

+ (ComSquareupPollexorThumborUrlBuilder_VerticalAlign *)valueOfWithNSString:(NSString *)name {
  return ComSquareupPollexorThumborUrlBuilder_VerticalAlign_valueOfWithNSString_(name);
}

- (ComSquareupPollexorThumborUrlBuilder_VerticalAlign_Enum)toNSEnum {
  return (ComSquareupPollexorThumborUrlBuilder_VerticalAlign_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComSquareupPollexorThumborUrlBuilder_VerticalAlign;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder_VerticalAlign;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TOP", "LComSquareupPollexorThumborUrlBuilder_VerticalAlign;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "MIDDLE", "LComSquareupPollexorThumborUrlBuilder_VerticalAlign;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "BOTTOM", "LComSquareupPollexorThumborUrlBuilder_VerticalAlign;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComSquareupPollexorThumborUrlBuilder_VerticalAlign, TOP), &JreEnum(ComSquareupPollexorThumborUrlBuilder_VerticalAlign, MIDDLE), &JreEnum(ComSquareupPollexorThumborUrlBuilder_VerticalAlign, BOTTOM), "LComSquareupPollexorThumborUrlBuilder;", "Ljava/lang/Enum<Lcom/squareup/pollexor/ThumborUrlBuilder$VerticalAlign;>;" };
  static const J2ObjcClassInfo _ComSquareupPollexorThumborUrlBuilder_VerticalAlign = { "VerticalAlign", "com.squareup.pollexor", ptrTable, methods, fields, 7, 0x4019, 2, 4, 5, -1, -1, 6, -1 };
  return &_ComSquareupPollexorThumborUrlBuilder_VerticalAlign;
}

+ (void)initialize {
  if (self == [ComSquareupPollexorThumborUrlBuilder_VerticalAlign class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_VerticalAlign, TOP) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_VerticalAlign_initWithNSString_withNSString_withInt_(e, @"top", @"TOP", 0);
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_VerticalAlign, MIDDLE) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_VerticalAlign_initWithNSString_withNSString_withInt_(e, @"middle", @"MIDDLE", 1);
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_VerticalAlign, BOTTOM) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_VerticalAlign_initWithNSString_withNSString_withInt_(e, @"bottom", @"BOTTOM", 2);
    J2OBJC_SET_INITIALIZED(ComSquareupPollexorThumborUrlBuilder_VerticalAlign)
  }
}

@end

void ComSquareupPollexorThumborUrlBuilder_VerticalAlign_initWithNSString_withNSString_withInt_(ComSquareupPollexorThumborUrlBuilder_VerticalAlign *self, NSString *value, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->value_, value);
}

IOSObjectArray *ComSquareupPollexorThumborUrlBuilder_VerticalAlign_values() {
  ComSquareupPollexorThumborUrlBuilder_VerticalAlign_initialize();
  return [IOSObjectArray arrayWithObjects:ComSquareupPollexorThumborUrlBuilder_VerticalAlign_values_ count:3 type:ComSquareupPollexorThumborUrlBuilder_VerticalAlign_class_()];
}

ComSquareupPollexorThumborUrlBuilder_VerticalAlign *ComSquareupPollexorThumborUrlBuilder_VerticalAlign_valueOfWithNSString_(NSString *name) {
  ComSquareupPollexorThumborUrlBuilder_VerticalAlign_initialize();
  for (int i = 0; i < 3; i++) {
    ComSquareupPollexorThumborUrlBuilder_VerticalAlign *e = ComSquareupPollexorThumborUrlBuilder_VerticalAlign_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComSquareupPollexorThumborUrlBuilder_VerticalAlign *ComSquareupPollexorThumborUrlBuilder_VerticalAlign_fromOrdinal(NSUInteger ordinal) {
  ComSquareupPollexorThumborUrlBuilder_VerticalAlign_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return ComSquareupPollexorThumborUrlBuilder_VerticalAlign_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupPollexorThumborUrlBuilder_VerticalAlign)

J2OBJC_INITIALIZED_DEFN(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor)

ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_values_[2];

@implementation ComSquareupPollexorThumborUrlBuilder_TrimPixelColor

+ (IOSObjectArray *)values {
  return ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_values();
}

+ (ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *)valueOfWithNSString:(NSString *)name {
  return ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_valueOfWithNSString_(name);
}

- (ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_Enum)toNSEnum {
  return (ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComSquareupPollexorThumborUrlBuilder_TrimPixelColor;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder_TrimPixelColor;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TOP_LEFT", "LComSquareupPollexorThumborUrlBuilder_TrimPixelColor;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "BOTTOM_RIGHT", "LComSquareupPollexorThumborUrlBuilder_TrimPixelColor;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor, TOP_LEFT), &JreEnum(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor, BOTTOM_RIGHT), "LComSquareupPollexorThumborUrlBuilder;", "Ljava/lang/Enum<Lcom/squareup/pollexor/ThumborUrlBuilder$TrimPixelColor;>;" };
  static const J2ObjcClassInfo _ComSquareupPollexorThumborUrlBuilder_TrimPixelColor = { "TrimPixelColor", "com.squareup.pollexor", ptrTable, methods, fields, 7, 0x4019, 2, 3, 4, -1, -1, 5, -1 };
  return &_ComSquareupPollexorThumborUrlBuilder_TrimPixelColor;
}

+ (void)initialize {
  if (self == [ComSquareupPollexorThumborUrlBuilder_TrimPixelColor class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 2 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor, TOP_LEFT) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_initWithNSString_withNSString_withInt_(e, @"top-left", @"TOP_LEFT", 0);
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor, BOTTOM_RIGHT) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_initWithNSString_withNSString_withInt_(e, @"bottom-right", @"BOTTOM_RIGHT", 1);
    J2OBJC_SET_INITIALIZED(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor)
  }
}

@end

void ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_initWithNSString_withNSString_withInt_(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *self, NSString *value, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->value_, value);
}

IOSObjectArray *ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_values() {
  ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_initialize();
  return [IOSObjectArray arrayWithObjects:ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_values_ count:2 type:ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_class_()];
}

ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_valueOfWithNSString_(NSString *name) {
  ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_initialize();
  for (int i = 0; i < 2; i++) {
    ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *e = ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComSquareupPollexorThumborUrlBuilder_TrimPixelColor *ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_fromOrdinal(NSUInteger ordinal) {
  ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ComSquareupPollexorThumborUrlBuilder_TrimPixelColor_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupPollexorThumborUrlBuilder_TrimPixelColor)

J2OBJC_INITIALIZED_DEFN(ComSquareupPollexorThumborUrlBuilder_ImageFormat)

ComSquareupPollexorThumborUrlBuilder_ImageFormat *ComSquareupPollexorThumborUrlBuilder_ImageFormat_values_[4];

@implementation ComSquareupPollexorThumborUrlBuilder_ImageFormat

+ (IOSObjectArray *)values {
  return ComSquareupPollexorThumborUrlBuilder_ImageFormat_values();
}

+ (ComSquareupPollexorThumborUrlBuilder_ImageFormat *)valueOfWithNSString:(NSString *)name {
  return ComSquareupPollexorThumborUrlBuilder_ImageFormat_valueOfWithNSString_(name);
}

- (ComSquareupPollexorThumborUrlBuilder_ImageFormat_Enum)toNSEnum {
  return (ComSquareupPollexorThumborUrlBuilder_ImageFormat_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComSquareupPollexorThumborUrlBuilder_ImageFormat;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComSquareupPollexorThumborUrlBuilder_ImageFormat;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "GIF", "LComSquareupPollexorThumborUrlBuilder_ImageFormat;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "JPEG", "LComSquareupPollexorThumborUrlBuilder_ImageFormat;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "PNG", "LComSquareupPollexorThumborUrlBuilder_ImageFormat;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "WEBP", "LComSquareupPollexorThumborUrlBuilder_ImageFormat;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComSquareupPollexorThumborUrlBuilder_ImageFormat, GIF), &JreEnum(ComSquareupPollexorThumborUrlBuilder_ImageFormat, JPEG), &JreEnum(ComSquareupPollexorThumborUrlBuilder_ImageFormat, PNG), &JreEnum(ComSquareupPollexorThumborUrlBuilder_ImageFormat, WEBP), "LComSquareupPollexorThumborUrlBuilder;", "Ljava/lang/Enum<Lcom/squareup/pollexor/ThumborUrlBuilder$ImageFormat;>;" };
  static const J2ObjcClassInfo _ComSquareupPollexorThumborUrlBuilder_ImageFormat = { "ImageFormat", "com.squareup.pollexor", ptrTable, methods, fields, 7, 0x4019, 2, 5, 6, -1, -1, 7, -1 };
  return &_ComSquareupPollexorThumborUrlBuilder_ImageFormat;
}

+ (void)initialize {
  if (self == [ComSquareupPollexorThumborUrlBuilder_ImageFormat class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 4 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_ImageFormat, GIF) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_ImageFormat_initWithNSString_withNSString_withInt_(e, @"gif", @"GIF", 0);
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_ImageFormat, JPEG) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_ImageFormat_initWithNSString_withNSString_withInt_(e, @"jpeg", @"JPEG", 1);
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_ImageFormat, PNG) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_ImageFormat_initWithNSString_withNSString_withInt_(e, @"png", @"PNG", 2);
    ((void) (JreEnum(ComSquareupPollexorThumborUrlBuilder_ImageFormat, WEBP) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComSquareupPollexorThumborUrlBuilder_ImageFormat_initWithNSString_withNSString_withInt_(e, @"webp", @"WEBP", 3);
    J2OBJC_SET_INITIALIZED(ComSquareupPollexorThumborUrlBuilder_ImageFormat)
  }
}

@end

void ComSquareupPollexorThumborUrlBuilder_ImageFormat_initWithNSString_withNSString_withInt_(ComSquareupPollexorThumborUrlBuilder_ImageFormat *self, NSString *value, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->value_, value);
}

IOSObjectArray *ComSquareupPollexorThumborUrlBuilder_ImageFormat_values() {
  ComSquareupPollexorThumborUrlBuilder_ImageFormat_initialize();
  return [IOSObjectArray arrayWithObjects:ComSquareupPollexorThumborUrlBuilder_ImageFormat_values_ count:4 type:ComSquareupPollexorThumborUrlBuilder_ImageFormat_class_()];
}

ComSquareupPollexorThumborUrlBuilder_ImageFormat *ComSquareupPollexorThumborUrlBuilder_ImageFormat_valueOfWithNSString_(NSString *name) {
  ComSquareupPollexorThumborUrlBuilder_ImageFormat_initialize();
  for (int i = 0; i < 4; i++) {
    ComSquareupPollexorThumborUrlBuilder_ImageFormat *e = ComSquareupPollexorThumborUrlBuilder_ImageFormat_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComSquareupPollexorThumborUrlBuilder_ImageFormat *ComSquareupPollexorThumborUrlBuilder_ImageFormat_fromOrdinal(NSUInteger ordinal) {
  ComSquareupPollexorThumborUrlBuilder_ImageFormat_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return ComSquareupPollexorThumborUrlBuilder_ImageFormat_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupPollexorThumborUrlBuilder_ImageFormat)
